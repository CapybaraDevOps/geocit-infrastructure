---
# tasks file for deploy_promgrafnode
- name: Update and upgrade all packages to the latest version
  ansible.builtin.apt:
    update_cache: true
    upgrade: dist
    cache_valid_time: 3600

- name: Install required packages
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common

- name: Add Docker's official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker's APT repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    state: present

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker
  ansible.builtin.apt:
    name: 
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Add Docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to Docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: /usr/local/bin/docker-compose
    owner: ansible
    group: ansible

- name: Enable and start Docker services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - docker.service
    - containerd.service

- name: Create necessary directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: ansible  
    group: ansible  
    mode: '0777'
  loop:
    - "{{ destin_folder }}/prometheus"
    - "{{ destin_folder }}/alertmanager"
    - "{{ destin_folder }}/blackbox-exporter"
    - "{{ destin_folder }}/grafana/provisioning/datasources"
    - "{{ destin_folder }}/grafana/provisioning/dashboards"

- name: Copy Docker Compose file
  copy:
    src: docker-compose-vm2.yml
    dest: "{{ destin_folder }}/docker-compose.yml"
    owner: ansible
    group: ansible

- name: Copy ENV file
  copy:
    src: .env
    dest: "{{ destin_folder }}/.env"
    owner: ansible
    group: ansible
    
- name: Copy grafana datasources file
  copy:
    src: grafana_datasources.yml
    dest: "{{ destin_folder }}/grafana/provisioning/datasources/prometheus.yml"
    owner: ansible
    group: ansible

- name: Copy configuration dashboards files
  copy:
    src: "{{ item.src }}"
    dest: "{{ destin_folder }}/grafana/provisioning/dashboards/{{ item.dest }}"
    owner: ansible
    group: ansible
  loop:
    - { src: 'blackbox_exporter.json', dest: 'blackbox_exporter.json' }
    - { src: 'dashboards.yml', dest: 'dashboards.yml' }
    - { src: 'node_exporter_full.json', dest: 'node_exporter_full.json' }

- name: Copy configuration files
  copy:
    src: "{{ item.src }}"
    dest: "{{ destin_folder }}/prometheus/{{ item.dest }}"
    owner: ansible
    group: ansible
  loop:
    - { src: 'prometheus.yml', dest: 'prometheus.yml' }
    - { src: 'alert_rules.yml', dest: 'alert_rules.yml' }

- name: Copy alert config file
  copy:
    src: alert_rules.yml
    dest: "{{ destin_folder }}/alertmanager/alert-config.yml"
    owner: ansible
    group: ansible

- name: Copy blackbox config file
  copy:
    src: blackbox-exporter-config.yml
    dest: "{{ destin_folder }}/blackbox-exporter/blackbox-exporter-config.yml"
    owner: ansible
    group: ansible

- name: Remove running containers
  shell: docker compose down && docker rm -f $(docker ps -a -q) && docker volume rm $(docker volume ls -q)
  become_user: ansible

- name: Run Docker Compose
  shell: docker compose -f {{ destin_folder }}/docker-compose.yml up -d
  become_user: ansible