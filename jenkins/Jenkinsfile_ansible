pipeline {
    agent any

    stages {
        stage('Checkout') { 
            steps {
                git branch: 'jira-51-configure-ansible-for-the-application', url: "git@github.com:CapybaraDevOps/geocit-infrastructure.git", credentialsId: 'gitcreds'
            }
        }
        stage('Deploy') {
            steps {
                dir('ansible/roles') {
                    withCredentials([file(credentialsId: 'google_secret_file', variable: 'GCP_SERVICE_ACCOUNT_FILE')]) {
                        script {
                            env.GCP_PROJECT = "capybarageocity"
                            env.GCP_ZONE = "europe-west3-c"
                            env.GCP_FILE = '/var/lib/jenkins/application_default_credentials.json'
                            env.DISCORD_WEBHOOK_URL = 'https://discord.com/api/webhooks/1245334329715068988/M0L-purMxZlTKqhX5In0ldMEwBRJmLrwg_6PTg7va0FennV8AsnxU7Z94DUD5IrIRW-1'
                            env.MONITORING_IP = sh(script: "gcloud compute instances list --format=json | jq '.[] | select(.name|startswith(\"monitoring\")) | .networkInterfaces[].networkIP'", returnStdout: true).trim()
                            
                            //Targets file mapping
                            sh 'envsubst < deploy_promgrafnode/files/prometheus.yml | tee deploy_promgrafnode/files/prometheus_temp.yml'
                            sh 'mv deploy_promgrafnode/files/prometheus_temp.yml deploy_promgrafnode/files/prometheus.yml'
                            //.env mapping
                            sh 'envsubst < deploy_promgrafnode/files/.env | tee deploy_promgrafnode/files/.env_temp'
                            sh 'mv deploy_promgrafnode/files/.env_temp deploy_promgrafnode/files/.env'
                            //Docker Compose mapping
                            sh 'envsubst < deploy_promgrafnode/files/docker-compose-vm2.yml | tee deploy_promgrafnode/files/docker-compose-vm2.yml_temp'
                            sh 'mv deploy_promgrafnode/files/docker-compose-vm2.yml_temp deploy_promgrafnode/files/docker-compose-vm2.yml'
                            //Inventory mapping
                            sh 'envsubst < ../inventory.gcp.yml | tee ../inventory_temp.gcp.yml'
                            sh 'mv ../inventory_temp.gcp.yml ../inventory.gcp.yml'
                        }
                        //Pass credentials to monitoring node
                        sshagent(credentials : ['ansible']) {
                            sh "ssh -o StrictHostKeyChecking=no ansible@${env.MONITORING_IP} \"mkdir -p .config/gcloud/\""
                            sh "scp -o StrictHostKeyChecking=no ${GCP_FILE} ansible@${env.MONITORING_IP}:~/.config/gcloud/application_default_credentials.json"
                        }
                        ansiblePlaybook playbook: '../geocitizen-playbook.yml', inventory: '../inventory.gcp.yml', credentialsId: 'ansible', extras: '--ssh-extra-args="-o StrictHostKeyChecking=no"'
                    }
                }
            }
        }
    }
}