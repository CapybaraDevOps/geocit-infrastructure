pipeline {
    agent any

    stages {
        stage('Checkout') { 
            steps {
                git branch: 'jira-51-configure-ansible-for-the-application', url: "git@github.com:CapybaraDevOps/geocit-infrastructure.git", credentialsId: 'gitcreds'
            }
        }
        stage('Deploy') {
            steps {
                dir('ansible/roles') {
                    withCredentials([file(credentialsId: 'google_secret_file', variable: 'GCP_SERVICE_ACCOUNT_FILE')]) {
                        script {
                            sh "gcloud compute instances list --format=json | jq '.[] | select(.name|startswith(\"app\")) | .networkInterfaces[].networkIP' > targets.json" 
                            
                            env.GCP_PROJECT = "capybarageocity"
                            env.TARGETS_JSON = "../../targets.json"
                            
                            //Targets file mapping
                            sh 'envsubst < deploy_promgrafnode/files/prometheus.yml | tee deploy_promgrafnode/files/prometheus_temp.yml'
                            sh 'mv deploy_promgrafnode/files/prometheus_temp.yml deploy_promgrafnode/files/prometheus.yml'
                            
                            //Inventory mapping
                            sh 'envsubst < ../inventory.gcp.yml | tee ../inventory_temp.gcp.yml'
                            sh 'mv ../inventory_temp.gcp.yml ../inventory.gcp.yml'
                        }
                        sh "ansible-inventory -i '../inventory.gcp.yml' --graph"
                        ansiblePlaybook playbook: '../geocitizen-playbook.yml', inventory: '../inventory.gcp.yml', credentialsId: 'ansible', extras: '--ssh-extra-args="-o StrictHostKeyChecking=no"'
                    }
                }
            }
        }
    }
}