pipeline {
    agent any
    tools {
        maven "M3"
    }
    stages {
        stage('git checkout') {
            steps{
                script {
                    git branch: 'main', credentialsId: 'gitcreds', url: 'git@github.com:CapybaraDevOps/geocit.git'
                }
            }
        }
        stage('Get IP') {
                steps{
                    script {
                    def extractIpsScript = '''
                        #!/bin/bash
                        output_file="ip_addresses.txt"
                        gcloud compute instances list --format=table\\(name,networkInterfaces[0].networkIP\\) | \
                        awk \'NR>1 && $1 != "jenkins-vm" && $1 != "monitoring1" {print $1}\' > "$output_file"

                        while IFS= read -r ip; do
                            echo "$ip"
                        done < "$output_file"

                        echo "IP addresses have been saved to $output_file"
                    '''
                    sh extractIpsScript
                    env.IP_ADDRESSES = readFile('ip_addresses.txt').trim()
                    }
                }
        }
        stage('Build Back-end') {
                steps{
                    sh "mvn clean package -Dmaven.test.skip=true"
                }
        }
        stage('Test Back-end') {
                steps{
                    sh "mvn test"
                }
        }
        stage('Deploy') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'terraform_creds', variable: 'GOOGLE_CREDENTIALS')]) {
                        env.IP_ADDRESSES.split('\n').each { ip ->
                            sh "gcloud compute scp /var/lib/jenkins/workspace/Deploy/target/citizen.war tomcat@${ip}:/opt/tomcat/webapps/ --zone=europe-west3-c"
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
