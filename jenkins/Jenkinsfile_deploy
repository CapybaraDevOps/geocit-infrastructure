pipeline {
    agent any
    tools {
        maven "M3"
    }
    stages {
        stage('git checkout') {
            steps{
                script {
                    git branch: 'main', credentialsId: 'gitcreds', url: 'git@github.com:CapybaraDevOps/geocit.git'
                }
            }
        }
        stage('Check IP') {
            steps {
                withCredentials([file(credentialsId: 'terraform_creds', variable: 'GOOGLE_CREDENTIALS')]) {
                        script {
                            def monitoringIP = sh(script: 'gcloud compute instances list --format=json | jq \'.[] | select(.name|startswith("monitoring")) | .networkInterfaces[].networkIP\'', returnStdout: true).trim()
                            def instanceIP = sh(script: 'gcloud compute instances list --format=json | jq \'.[] | select(.name|startswith("app")) | {name: .name, ip: .networkInterfaces[0].networkIP}\'', returnStdout: true).trim()
                            def externalIP = sh(script: 'gcloud compute forwarding-rules list --format=json | jq \'.[] | {name: .name, ip: .IPAddress}\'', returnStdout: true).trim()
                            def postgresIP = sh(script: 'gcloud sql instances describe postgres-db --format=json | jq -r \'{name: .name, ip: .ipAddresses[0].ipAddress}\'', returnStdout: true).trim()
                           
                            echo "Monitoring IP: ${monitoringIP}"
                            echo "Instance IP: ${instanceIP}"
                            echo "External IP: ${externalIP}"
                            echo "Postgres IP: ${postgresIP}"
                        }
                }
            }
        }
        stage('Build Back-end') {
                steps{
                    sh "mvn clean package -Dmaven.test.skip=true"
                }
        }
        stage('Test Back-end') {
                steps{
                    sh "mvn test"
                }
        }
        stage('Deploy') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'terraform_creds', variable: 'GOOGLE_CREDENTIALS')]) {
                            sh "gcloud compute scp /var/lib/jenkins/workspace/Deploy/target/citizen.war tomcat@tomcat:/opt/tomcat/webapps/ --zone=europe-west3-c"
                    }
                }
            }
            
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}